# Generated by Django 5.1.2 on 2024-11-09 06:04

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='kaizen_images/')),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='KaizenSheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True)),
                ('area_implemented', models.CharField(max_length=255)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('problem', models.TextField()),
                ('idea_solved', models.TextField()),
                ('standardization', models.TextField()),
                ('benefits', models.TextField()),
                ('deployment', models.TextField()),
                ('is_temporary', models.BooleanField(default=False)),
                ('serial_key', models.CharField(blank=True, max_length=15, unique=True)),
                ('before_improvement_image', models.ImageField(blank=True, null=True, upload_to='kaizen/before/')),
                ('after_improvement_image', models.ImageField(blank=True, null=True, upload_to='kaizen/after/')),
                ('impacts_safety', models.BooleanField(default=False)),
                ('impacts_quality', models.BooleanField(default=False)),
                ('impacts_productivity', models.BooleanField(default=False)),
                ('impacts_delivery', models.BooleanField(default=False)),
                ('impacts_cost', models.BooleanField(default=False)),
                ('impacts_morale', models.BooleanField(default=False)),
                ('impacts_environment', models.BooleanField(default=False)),
                ('safety_benefits_description', models.TextField(blank=True, null=True)),
                ('safety_uom', models.CharField(blank=True, max_length=255, null=True)),
                ('safety_before_implementation', models.TextField(blank=True, null=True)),
                ('safety_after_implementation', models.TextField(blank=True, null=True)),
                ('quality_benefits_description', models.TextField(blank=True, null=True)),
                ('quality_uom', models.CharField(blank=True, max_length=255, null=True)),
                ('quality_before_implementation', models.TextField(blank=True, null=True)),
                ('quality_after_implementation', models.TextField(blank=True, null=True)),
                ('productivity_benefits_description', models.TextField(blank=True, null=True)),
                ('productivity_uom', models.CharField(blank=True, max_length=255, null=True)),
                ('productivity_before_implementation', models.TextField(blank=True, null=True)),
                ('productivity_after_implementation', models.TextField(blank=True, null=True)),
                ('delivery_benefits_description', models.TextField(blank=True, null=True)),
                ('delivery_uom', models.CharField(blank=True, max_length=255, null=True)),
                ('delivery_before_implementation', models.TextField(blank=True, null=True)),
                ('delivery_after_implementation', models.TextField(blank=True, null=True)),
                ('cost_benefits_description', models.TextField(blank=True, null=True)),
                ('cost_uom', models.CharField(blank=True, max_length=255, null=True)),
                ('cost_before_implementation', models.TextField(blank=True, null=True)),
                ('cost_after_implementation', models.TextField(blank=True, null=True)),
                ('morale_benefits_description', models.TextField(blank=True, null=True)),
                ('morale_uom', models.CharField(blank=True, max_length=255, null=True)),
                ('morale_before_implementation', models.TextField(blank=True, null=True)),
                ('morale_after_implementation', models.TextField(blank=True, null=True)),
                ('environment_benefits_description', models.TextField(blank=True, null=True)),
                ('environment_uom', models.CharField(blank=True, max_length=255, null=True)),
                ('environment_before_implementation', models.TextField(blank=True, null=True)),
                ('environment_after_implementation', models.TextField(blank=True, null=True)),
                ('before_improvement_text', models.TextField(blank=True, default='Initial before improvement description', null=True)),
                ('after_improvement_text', models.TextField(blank=True, default='Initial after improvement description', null=True)),
                ('standardization_file', models.FileField(blank=True, null=True, upload_to='kaizen/standardization/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kaizen_sheets_created', to=settings.AUTH_USER_MODEL)),
                ('implemented_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='kaizen_sheets_implemented', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_type', models.CharField(choices=[('employee', 'Employee'), ('admin', 'Admin'), ('coordinator', 'Coordinator')], max_length=50)),
                ('department', models.CharField(blank=True, max_length=50, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
